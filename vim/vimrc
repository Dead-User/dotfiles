" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2017 Sep 20
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Get the defaults that most users want.
source $VIMRUNTIME/defaults.vim

if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file (restore to previous version)
  if has('persistent_undo')
    set undofile	" keep an undo file (undo changes after closing)
  endif
endif

if &t_Co > 2 || has("gui_running")
  " Switch on highlighting the last used search pattern.
  set guioptions-=m
  set guioptions-=T
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  augroup END

else

  set autoindent		" always set autoindenting on

endif " has("autocmd")

" Add optional packages.
"
" The matchit plugin makes the % command work better, but it is not backwards
" compatible.
" The ! means the package won't be loaded right away but when plugins are
" loaded during initialization.
if has('syntax') && has('eval')
  packadd! matchit
endif


execute pathogen#infect()

set encoding=utf-8 fileencodings=utf-8,sjis-8,cp936
set fileformats=unix,dos
set rtp+=/home/usr0/.opam/default/share/merlin/vim

syntax enable
colorscheme CS

let g:fencview_autodetect=1
let g:fencview_checklines=20

filetype on
filetype indent on
filetype plugin on

set shiftwidth=2

set expandtab
set number
set nobackup

let mapleader=" "

nnoremap <leader>t :MerlinTypeOf<enter>
nnoremap <leader>s :%s/
nnoremap <leader>dm :delmarks
"reverse ` and ' since the former is more useful
nnoremap ` '
nnoremap ' `

"all about arrow keys
nnoremap t h
nnoremap T b
nnoremap <C-t> ^
vnoremap t h
vnoremap T b
vnoremap <C-t> ^

nnoremap r k
nnoremap R <C-u>
vnoremap r k
vnoremap R <C-u>
vnoremap <C-r> gg

nnoremap h j
nnoremap H <C-d>
vnoremap h j
vnoremap H <C-d>
vnoremap <C-h> G

nnoremap n l
nnoremap N e
nnoremap <C-n> $
vnoremap n l
vnoremap N e
vnoremap <C-n> $
